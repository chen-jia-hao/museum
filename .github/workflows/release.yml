name: Release CI

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-museum:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
#        platform: [macos-latest, ubuntu-20.04, windows-latest]

        include:
          - build: linux
            os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - build: macos
            os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
          - build: windows
            os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Query version number
        run: |
          echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV
          env

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: pnpm install

      - name: Install rust target
        run: rustup target add ${{ matrix.target }}

      - run: pnpm build --target ${{ matrix.target }} && ls -R ./src-tauri
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: ls build dir
#        run: |
#          pwd
#          ls
#          echo '----'
#          ls -R ./src-tauri

#      - name: upload file
#        uses: actions/upload-artifact@v3
#        with:
#          name: artifacts
#          path: |
#            ./src-tauri/target/release/bundle/**/**.AppImage.*
#            ./src-tauri/target/release/bundle/**/**.deb
#            ./src-tauri/target/release/bundle/**/**.dmg
#            ./src-tauri/target/release/bundle/**/**.app.*
#            ./src-tauri/target/release/bundle/**/**.exe
#            ./src-tauri/target/release/bundle/**/**.msi

#      - uses: tauri-apps/tauri-action@v0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tagName: museum-${{ env.version }} # the action automatically replaces \_\_VERSION\_\_ with the app version
#          releaseName: museum-${{ env.version }}
#          releaseBody: 'See the assets to download this version and install.'
#          releaseDraft: true
#          prerelease: false

  release-museum:
    needs: build-museum
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Query version number
        run: echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV
      - name: test env
        run: env
#      - uses: actions/download-artifact@v2
#        with:
#          name: artifacts
#          path: artifacts


